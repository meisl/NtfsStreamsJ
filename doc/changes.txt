Change Notes:
=============

Since 1.7:
New plugins: JLGui audio plugin, video player plugin
direct Swing support (embed JFrame)
Java 1.6 support
JIT (just-in-time) compiler is used
Java on USB stick
Bugfixes, Error Stacktrace

Since 1.6:
New Plugins JSID-Player and SNMP-Plugin (first 3rd party plugin by Ján Gregor)

Since 1.5SP1:
Full support of Total Commander v7 SDK API
Developer Documentation added

Since 1.5:
Using offline installers by Total Commander archives
Adding a Maven-Site with project documentation

Since 1.4:
Many java plugins can be run at the same time: they share the same Java Virtual Machine. Now you can see all plugins live and at the same time
Now its time to go on holiday for June :-)

Since 1.3:
Online Installers were added for each plugin with Nullsofts Installer System (NSIS). Installation is super simple (run .exe and restart Total Commander). Installation goes online and access the latest binaries of specific version. 
Each plugin was created with Eclipse, build and deployed with Maven plugin (M2Eclipse) to a new Maven repository (totalcmd.net). Now the binaries are versioned in the Maven repository. Only one klick is needed to deploy a new plugin version.
Main bug is unfixed:Only one plugin runs at the same time.

Since 1.2:
All APIs completed now!
Packer Plugin (WCX) Support completed
A catalog maker for file cataloges created (*.jlst)

Since 1.1:
Content Plugin (WDX) Support completed
New Picture content plugin (*.bmp, *.ico, *.gif, *.jpeg, *.png)

Since 1.0:
New Email file system plugin added (pop3, IMAP).
New OLE plugin added (show OLE capable application content, e.g. .doc, .xls, .ppt, etc.)
Image viewer pplugin added (*.bmp, *.ico, *.gif, *.jpeg, *.png)
Adapter classes inserted (WLXPluginAdapter, WFXPluginAdapter) with must-have methods, to extend your own plugins.
New native methods added to call Total Commander functions (fsLog, fsRequest, fsSetProgress). This gives you the possibility to use FTP console window, call custom dialogues or set a progress bar.
Last few methods added (fsInit, fsStatusInfo, ...). WFX API is complete, except handling of custom icons.
INI file is cleaned (only values that make sense to the user are left)
Java messages are shown not in UTF-8 anymore, but in the default codepage (e.g. german umlauts are corrected now)
Internal: C- source code looks much better now.

Since 0.9:
Nearly almost WFX and WLX support works now
All error texts are externalized and translatable (errormessages.ini)
Default language is in tc_javaplugin.INI
Still open: Return Bitmaps from Java (WLX: preview, WFX: ICO)
Still open: JVM starts more than once at installation time (2nd start fails)

Since 0.8:

Near almost all WFX filesystem plugin functions are now supported. In detail:
FsGetDefRootName
FsGetFile
FsPutFile
FsDeleteFile
FsRemoveDir
FsSetAttr
FsSetTime
FsSetDefaultParams

Please refer to the apidocs/index.html (open it with WLX lister plugin 'BringupBrowser' class :-)

Since 0.7:
Various error situations are checked (error dialog implemented)
is a Java Runtime Environment installed?
is TC Java Plugin installed in the correct directory?
Each Java Class/Method/Field is checked
The FileTime object in the RemoteInfo class is corrected (ms since 1.1.1970)
Java Method fsRenMovFile() is corrected

Since 0.6:
Java Runtime Library is searched from now on in the registry first,
if it is not found, then the INI file entry is used.
WFX file system plugin API was extended:
fsExecuteFile, fsFindClose, fsMkDir, fsRenMovFile are now supported.
Win32FindData: All file attributes are implemented (file size, name, 
alternate DOS file name, last modified, etc.).
API Change: FileTime will be measured in ms since 1.1.1970 (like java.io.File.lastModified() does)
The Drives Plugins performance was improved (Java is not so slow, as you would expect from my earlier versions ;-).
The download size of the source code is much smaller now.
The HTML Browser plugin has now the correct extension (.htm|.html) and opens such files in the lister window.
The Java API documentation grew bigger. It can easily be shown with the TC Java Plugin (Press F3 or Strg+Q).

Since 0.5:
Java API documentation
Complete WLX plugin feature support (optional and must have methods)
bugfix: external lister window could not be closed

Since 0.4:
Screenshots added with example lister plugins
remove nearly all absolute path names from INI configuration file
Change JVM DLL to english version of JRE 1.5_06

Since 0.3:
Using SWT now for GUI components. Code is much simpler now.
Some WLX lister plugins included (e.g. a HTML browser)
XML Drive WFX file system plugin included

Since 0.2:
Using Swing for GUI components. Use some tricky code to get the HWND windows handle of the GUI

Since 0.1:
Introducing the first Java plugin for Total Commander, a C-64 Disassembler. Using a Rich Text window and displaying Java String contents. So, the project began.
